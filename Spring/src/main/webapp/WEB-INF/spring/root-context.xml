<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="http://www.springframework.org/schema/jdbc
					 http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
					 http://www.springframework.org/schema/beans
					 http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
					 http://www.springframework.org/schema/tx
					 http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"> 

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<!-- 
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.0.11:1521:orcl" />
	-->
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="url" value="jdbc:log4jdbc:oracle:thin:@192.168.0.11:1521:orcl" />
		<property name="username" value="exam_manager" />
		<property name="password" value="exam_manager!" />
	</bean>
	
	<!--   mybatis Session 생성 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<!--  mybatis SessionFactory 생성 -->
	<bean id="sqlSessionFactoryBean"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- MyBatis 설정 파일 위치 지정 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- SQL Mapper 파일 위치 지정 -->
		<property name="mapperLocations" value="classpath:mapper/**/*.xml" />
	</bean>
	
	
	
	<!-- 지정된 베이스 패키지에서 DAO(Mapper) 를 검색하여 등록 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.study.spring.emp.dao" />
	</bean>
	<!-- 트랜잭션 매니저 bean
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	 -->
	
	<!-- 아노테이션 기반의 트랜잭션을 사용
	<tx:annotation-driven transaction-manager="transactionManager"/>
	 -->
</beans>

